%{include|source-content=<div id\="apt-box">}

INDI for Java - General Information

 INDI for Java is a set of libraries (written in the Java programming language) to implement Clients (graphical and not graphical ones), 
Drivers and Servers that follow the INDI distributed control protocol, a protocol designed to operate astronomical instrumentation.

*Intended Audience

 The provided libraries are focused on the development of Drivers, Clients and Servers using the INDI protocol in the Java programming language. 
If you are a regular software user or if you are looking for a simple program to control your astronomical devices and you don't know anything about drivers, 
programming and Java then go to the {{{i4-all-in-one/index.html}i4-all-in-one}} module.

 However, if you are a programmer and you want to start your own astronomical control program or you want to program a driver for a particular astronomical device, 
this might be your starting point.

 Please note that this libraries do not pretend to substitute or even replace the original INDI libraries which are still used and actively developed. 
Moreover, this project does not pretend to mimic every single option that the original libraries offer and, in fact, the programming ideas behind this 
library differ in some points to the original ones: particularly, INDI for Java tries to provide a truly object oriented approach in the development of INDI compatible software.
 
*Where do I start?

 If you are interested in the project, you might want to check the Downloads available for the project. In those downloads you have all the necessary 
tools to begin developing you're own INDI Clients and Drivers: You'll find the source code for the library, the compiled libraries (in .jar format), 
all the Java Docs for the libraries and even some example files to start experimenting.

 Starting with version 1.50 i4j is converted to a maven build and the libraries publisched to central! So no need to download the librarys just add the required dependensies.
The libraries are now also more modulized, so if you want to develop a driver (in maven) for a focuser just add: 

----------------------------------------
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>i4j-driver-focuser</artifactId>
			<version>${project.version}</version>
		</dependency>
----------------------------------------

 to your denpendencies and you are ready to start.


 It is also recommended that you check the original INDI Library web page in which you will find lots of information about the INDI protocol, the original 
INDI libraries (written in C and C++) and many more resources (including a developers mailing list) that might help you start developing your own INDI related projects.

%{include|source-content=</div>}