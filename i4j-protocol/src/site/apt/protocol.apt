INDI Protocol API

 This package contains the new INDI protocol classes that will be used starting with version 2.0.0.
These classes use {{{http://xstream.codehaus.org/}XStream}} to encapsulate the complete indi protocol
behind normal pojo's. furder more the package introduces an interface the INDIConnection that has an 
implementation for different kind of "transports". Currently there are Socket/Url/Pipe and Process 
implementations. This has many advantages as it completely eliminates the xml/string manipulations from the
base code, and encapsulates it behind the interfaces and the XML conversion is now only done if the stream
leaves the jvm. Internaly the communication will be based on the pojos's streaming throu the interfaces.
This and the very fast xml parser of Xpp3 will speedup the system and furder reduces the profile of
i4j.

 Normal driver developers will never see these pojo's because they are already behind the scenes, but developers
that plan to go deeper will need to know how they work.

*Pojo

 Every indi message type has a pojo class representing it with attributes for all fields, that can be used as
attributes in that message. They are kept very simple because there task is just being DTO's. For debugging
they got a good toString representing the message as preview of the xml.

*The Url interface

 The url recognition is automatically activated when one of the indi protocol classes is used. 
Now you can use the schema "indi://host:port/Driver/property" to connect to a server. Be aware that the
input and output streams are INDI(In/Out)putStream's and should be casted to such, they are not intended 
to write bytes just indi protocol pojo's.   